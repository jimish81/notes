sudo yum install -y yum-utils \
  device-mapper-persistent-data \
  lvm2

sudo yum-config-manager \
    --add-repo \
    https://download.docker.com/linux/centos/docker-ce.repo

yum list docker-ce --showduplicates | sort -r
sudo yum install docker-ce-18.06.1.ce-3.el7 docker-ce-cli-18.06.1.ce-3.el7 containerd.io
sudo systemctl start docker
sudo docker run hello-world
sudo docker images
sudo docker ps
sudo docker ps -a

<Strat docker>
 sudo systemctl start docker
https://docs.docker.com/get-started/part2/
<Build a image>
[centos@ip-10-0-1-36 app1]$ sudo docker build --tag=friendlyhello .
Note: This creates a Docker image, which we’re going to name using the --tag option. Use -t if you want to use the shorter option.

<See the image>
[centos@ip-10-0-1-36 app1]$ sudo docker image ls

<Run the app, mapping your machine’s port 4000 to the container’s published port 80 using -p>
[centos@ip-10-0-1-36 app1]$ sudo docker run -p 4000:80 friendlyhello
or
[centos@ip-10-0-1-36 app1]$ sudo docker run --name friendly-hello -d  -p 9001:80 friendlyhello
--name: asign a name to docker container
-d: run in background <(d)etach mode>

<to check the log of a container>
[centos@ip-10-0-1-36 app1]$ sudo docker logs -f friendly-hello <Using container name>
or 
[centos@ip-10-0-1-36 app1]$ sudo docker logs -f 036e50ff7299 <Using container id>

<command to access interactive shell of a running container>
[centos@ip-10-0-1-36 app1]$ sudo docker exec -it friendly-hello /bin/bash
or 
[centos@ip-10-0-1-36 ~]$ sudo docker exec -u 0 -it DockerJenkins /bin/bash
-u 0 <to login as root>
<login to docker hub>
[centos@ip-10-0-1-36 app1]$ sudo docker login
Login with your Docker ID to push and pull images from Docker Hub. If you don't have a Docker ID, head over to https://hub.docker.com to create one.
Username: mazuma5
Password:
WARNING! Your password will be stored unencrypted in /root/.docker/config.json.
Configure a credential helper to remove this warning. See
https://docs.docker.com/engine/reference/commandline/login/#credentials-store

Login Succeeded

<The notation for associating a local image with a repository on a registry is username/repository:tag. The tag is optional, but recommended, since it is the mechanism that registries use to give Docker images a version. Give the repository and tag meaningful names for the context, such as get-started:part2. This puts the image in the get-started repository and tag it as part2.

Now, put it all together to tag the image. Run docker tag image with your username, repository, and tag names so that the image uploads to your desired destination

docker tag image username/repository:tag>
[centos@ip-10-0-1-36 app1]$ sudo docker tag friendlyhello mazuma5/get-started:part1

<Run docker image ls to see your newly tagged image>
[centos@ip-10-0-1-36 app1]$ sudo docker image ls
REPOSITORY            TAG                 IMAGE ID            CREATED             SIZE
friendlyhello         latest              4cf2b44318ec        34 minutes ago      131MB
mazuma5/get-started   part1               4cf2b44318ec        34 minutes ago      131MB
python                2.7-slim            8559620b5b0d        7 hours ago         120MB
hello-world           latest              fce289e99eb9        2 months ago        1.84kB

<Publish the image>
[centos@ip-10-0-1-36 app1]$ sudo docker push  mazuma5/get-started:part1

Note: Pull and run the image from the remote repository
From now on, you can use docker run and run your app on any machine with this command:

docker run -p 4000:80 username/repository:tag
If the image isn’t available locally on the machine, Docker pulls it from the repository.

<Check running container>
[centos@ip-10-0-1-36 ~]$ sudo docker container ls

<stop running container>
[centos@ip-10-0-1-36 ~]$ sudo docker container stop 036e50ff7299

<Setting up Docker Jenkins>
[centos@ip-10-0-1-36 ~]$ sudo docker pull jenkins
[centos@ip-10-0-1-36 ~]$ sudo docker run --name DockerJenkins -d -p 8080:8080 -p 50000:50000 -v /var/jenkins_home jenkins
[centos@ip-10-0-1-36 ~]$ sudo docker logs -f DockerJenkins
[centos@ip-10-0-1-36 ~]$ sudo docker exec -u 0 -it DockerJenkins /bin/bash
<Install docker inside Jenkins>
https://docs.docker.com/install/linux/docker-ce/debian/
http://34.209.123.174
<To check the OS type in UNIX>
cat /etc/os-release

        sh 'npm install --save-dev @angular-devkit/build-angular'
        sh 'npm install --save-dev http-server'
        sh 'npm install -g @angular/cli'

sudo docker run --name custom-jenkins-container-4 --privileged -d -p 8080:8080 custom-jenkins
sudo docker run --name custom-jenkins-container -d -p 8080:8080 3030:3030 -v /var/run/docker.sock/:/var/run/docker.sock custom-jenkins