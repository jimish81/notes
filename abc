Install Java 1.8 version
1.	Commands to install java
sudo yum install java-1.8.0-openjdk-devel (may need to execute: sudo yum remove java, to remove older versions first)

2.	Verify correct version of java is installed
 
Install Jenkins
1.	Installing Jenkins on RHEL/EWS through locally copied rpmRefer:https://wiki.jenkins.io/display/JENKINS/Installing+Jenkins+on+Red+Hat+distributions
2.	Always prefer to install stable version
There is also a LTS YUM repository for the LTS Release Line
•	sudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat-stable/jenkins.repo
•	sudo rpm --import https://jenkins-ci.org/redhat/jenkins-ci.org.key
•	sudo yum install jenkins
3.	Using VI editor, open and edit the below file as a root user
vi /etc/sysconfig/jenkins
JENKINS_JAVA_CMD="/etc/alternatives/java_sdk_1.8.0/bin/java"
JENKINS_PORT="8080"
4.	stop any other service running on port 8080
sudo lsof -i :8080
service httpd stop
apachectl stop
sudo service tomcat7 stop
sudo service tomcat6 stop
5.	start standalone jenkins (jetty based service)
export JENKINS_HOME=/var/lib/jenkins
sudo service jenkins start
ps -ef | grep jenkins
sudo service jenkins stop
6.	Log files of Jenkins are located in below location:
vi /var/log/jenkins/jenkins.log
7.	Connect to Jenkins server from the browser:
Example:  http://10.158.105.202:8080
Initial page setup would be as follows:
 
Copy the password from the specified file and paste it textbox and click continue.
8.	Click on install suggested plugins from Jenkins UI
 

 

9.	Create admin user with username and password as admin and admin, after the initial installation is complete
10.	Install SCP and SSH plugins through manage Jenkins
Install Git repository
Commands to install Git, from home directory
wget "http://kernel.org/pub/software/scm/git/git-2.9.5.tar.gz"
tar -xvf git-2.9.5.tar.gz
sudo yum install autoconf
cd git-2.9.5
make configure
./configure --prefix=/usr
make all doc info
sudo make install install-doc install-html install-info
Install NPM
Commands to install NPM as root user
sudo curl --silent --location https://rpm.nodesource.com/setup_8.x | sudo bash -
sudo yum install gcc-c++ make
sudo yum install -y nodejscd
SSH keys Modification
1.	vi /etc/passwd
update /bin/false to /bin/bash for jenkins user
2.	sudo su cloud-user
sudo su - 
sudo su jenkins
cd ~
Jenkins user home directory  would be /var/lib/jenkins
3.	As root user, execute the below commands
ssh-keygen -t rsa
cat .ssh/id_rsa.pub
copy this key to bitbucket account settings

4.	to add the bitbucket host key in .ssh/known_hosts
ssh velayu2@code.td.com

5.	To ssh from Jenkins VM to JBOSS_EAP VM (first generate the keys in Jenkins VM):
ssh-copy-id -i /var/lib/jenkins/.ssh/id_rsa.pub "singh5d@ 10.158.111.93" 
or
ssh velayu2@10.158.111.93 mkdir -p .ssh
cat .ssh/id_rsa.pub | ssh velayu2@10.158.111.93 'cat >> .ssh/authorized_keys'

6.	#to add the JBOSS_EAP host key in .ssh/known_hosts
ssh velayu2@10.158.111.93
sudo su cloud-user
sudo su -
chmod -R 777 /var/lib/jbossas
Jenkins UI configuration
1.	Login as admin/admin -> Manage jenkins-> Manage Plugins -> install Maven integration and sonarqube plugin
2.	Manage jenkins-> Configure systems- >SSH remote host (create the credentials by click on ADD)
 
Maven Installation
1.	Download the binaries from https://maven.apache.org/download.cgi
2.	Refer the instruction for installation of Maven:https://access.redhat.com/documentation/en-us/red_hat_jboss_fuse/6.2.1/html/installation_on_jboss_eap/install_maven
3.	Replace the settings.xml file to the below file
  
4.	Modify the configuration in Jenkins UI as follows:
 


SonarQube installation
SONAR with POSTGRESSQL
1.	Refer the below document for installation steps:
https://www.postgresql.org/download/linux/redhat/
2.	Verify the following details
vi /var/lib/pgsql/10/data/postgresql.conf
listen_addresses = 'localhost'
port = 5432
3.	vi /var/lib/pgsql/10/data/pg_hba.conf  - change everything to password
local   all             all                                     trust
host    all             all             127.0.0.1/32            md5
host    all             all             ::1/128                 md5
4.	Start the postgres service : service postgresql-10 start
5.	To change password for postgres:
su - postgres
psql
\password postgres – create a new password for postgres

6.	Verify the connection by sudo -u postgres psql postgres with new password
7.	Create a new user sonar - CREATE ROLE sonar WITH LOGIN PASSWORD 'sonar'
8.	Create database sonar - CREATE DATABASE sonar;
9.	Grant previlages - GRANT ALL PRIVILEGES ON DATABASE sonar TO sonar;
10.	Alter the user role:
ALTER USER sonar WITH SUPERUSER;
ALTER USER sonar WITH Replication;
ALTER DATABASE sonar OWNER TO sonar;
11.	Verify login to postgres db – sonar with sonar user
sudo -u sonar psql sonar
SonarQube server
Download the sonarqube source file
wget https://sonarsource.bintray.com/Distribution/sonarqube/sonarqube-6.4.zip
sudo yum -y install unzip
sudo unzip sonarqube-6.4.zip -d /opt

sudo mv /opt/sonarqube-6.4 /opt/sonarqube
Modify the properties on vi /opt/sonarqube/conf/sonar.properties
sonar.jdbc.username=sonar
sonar.jdbc.password=sonar
sonar.jdbc.url=jdbc:postgresql://localhost:5432/sonar
sonar.web.host=0.0.0.0
sonar.web.port=9000
1.	Start the sonar server: /opt/sonarqube/bin/linux-x86-64/sonar.sh start
2.	Stop the server : /opt/sonarqube/bin/linux-x86-64/sonar.sh stop
3.	Configuring as service: 
Create a file vi /etc/init.d/sonar and save it with below contents
#!/bin/sh
#
# rc file for SonarQube
#
# chkconfig: 345 96 10
# description: SonarQube system (www.sonarsource.org)
#
### BEGIN INIT INFO
# Provides: sonar
# Required-Start: $network
# Required-Stop: $network
# Default-Start: 3 4 5
# Default-Stop: 0 1 2 6
# Short-Description: SonarQube system (www.sonarsource.org)
# Description: SonarQube system (www.sonarsource.org)
### END INIT INFO
/usr/bin/sonar $*

Execute below steps
sudo ln -s /opt/sonarqube/bin/linux-x86-64/sonar.sh /usr/bin/sonar
sudo chmod 755 /etc/init.d/sonar
sudo chkconfig --add sonar

sudo service sonar start
sudo service sonar stop
sudo service sonar restart
Install perl module on jboss server
Command for installation: yum install perl-CPAN
As a root user login to cpan shell with the below command:
Cpan 
Then execute the below statements
Install YAML
Install XML::Simple
Veracode integration
Refer to the steps mentioned on the below document:
https://collaborate.td.com/display/OSS/How+to+setup+VeraCode+on+Jenkins
https://help.veracode.com/reader/PgbNZUD7j8aY7iG~hQZWxQ/_4G8gT1rhWMgVVtCI1C57A
Sonartype scan
Refer to the document mentioned on the below document:
https://help.sonatype.com/integrations/nexus-and-continuous-integration/nexus-platform-plugin-for-jenkins
Master and slave configuration
Refer to the steps mentioned in https://wiki.jenkins.io/display/JENKINS/SSH+Slaves+plugin


